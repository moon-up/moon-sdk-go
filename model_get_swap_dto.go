/*
moon-vault-api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moonsdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetSwapDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSwapDto{}

// GetSwapDto struct for GetSwapDto
type GetSwapDto struct {
	Src string `json:"src"`
	Dst string `json:"dst"`
	Amount string `json:"amount"`
	From string `json:"from"`
	Slippage float64 `json:"slippage"`
	Protocols *string `json:"protocols,omitempty"`
	Fee *string `json:"fee,omitempty"`
	DisableEstimate *bool `json:"disableEstimate,omitempty"`
	Permit *string `json:"permit,omitempty"`
	IncludeTokensInfo *bool `json:"includeTokensInfo,omitempty"`
	IncludeProtocols *bool `json:"includeProtocols,omitempty"`
	Compatibility *bool `json:"compatibility,omitempty"`
	AllowPartialFill *bool `json:"allowPartialFill,omitempty"`
	Parts *string `json:"parts,omitempty"`
	MainRouteParts *string `json:"mainRouteParts,omitempty"`
	ConnectorTokens *string `json:"connectorTokens,omitempty"`
	ComplexityLevel *string `json:"complexityLevel,omitempty"`
	GasLimit *string `json:"gasLimit,omitempty"`
	GasPrice *string `json:"gasPrice,omitempty"`
	Referrer *string `json:"referrer,omitempty"`
	Receiver *string `json:"receiver,omitempty"`
	ChainId *float64 `json:"chainId,omitempty"`
}

type _GetSwapDto GetSwapDto

// NewGetSwapDto instantiates a new GetSwapDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSwapDto(src string, dst string, amount string, from string, slippage float64) *GetSwapDto {
	this := GetSwapDto{}
	this.Src = src
	this.Dst = dst
	this.Amount = amount
	this.From = from
	this.Slippage = slippage
	return &this
}

// NewGetSwapDtoWithDefaults instantiates a new GetSwapDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSwapDtoWithDefaults() *GetSwapDto {
	this := GetSwapDto{}
	return &this
}

// GetSrc returns the Src field value
func (o *GetSwapDto) GetSrc() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Src
}

// GetSrcOk returns a tuple with the Src field value
// and a boolean to check if the value has been set.
func (o *GetSwapDto) GetSrcOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Src, true
}

// SetSrc sets field value
func (o *GetSwapDto) SetSrc(v string) {
	o.Src = v
}

// GetDst returns the Dst field value
func (o *GetSwapDto) GetDst() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Dst
}

// GetDstOk returns a tuple with the Dst field value
// and a boolean to check if the value has been set.
func (o *GetSwapDto) GetDstOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Dst, true
}

// SetDst sets field value
func (o *GetSwapDto) SetDst(v string) {
	o.Dst = v
}

// GetAmount returns the Amount field value
func (o *GetSwapDto) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *GetSwapDto) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *GetSwapDto) SetAmount(v string) {
	o.Amount = v
}

// GetFrom returns the From field value
func (o *GetSwapDto) GetFrom() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.From
}

// GetFromOk returns a tuple with the From field value
// and a boolean to check if the value has been set.
func (o *GetSwapDto) GetFromOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.From, true
}

// SetFrom sets field value
func (o *GetSwapDto) SetFrom(v string) {
	o.From = v
}

// GetSlippage returns the Slippage field value
func (o *GetSwapDto) GetSlippage() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Slippage
}

// GetSlippageOk returns a tuple with the Slippage field value
// and a boolean to check if the value has been set.
func (o *GetSwapDto) GetSlippageOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Slippage, true
}

// SetSlippage sets field value
func (o *GetSwapDto) SetSlippage(v float64) {
	o.Slippage = v
}

// GetProtocols returns the Protocols field value if set, zero value otherwise.
func (o *GetSwapDto) GetProtocols() string {
	if o == nil || IsNil(o.Protocols) {
		var ret string
		return ret
	}
	return *o.Protocols
}

// GetProtocolsOk returns a tuple with the Protocols field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSwapDto) GetProtocolsOk() (*string, bool) {
	if o == nil || IsNil(o.Protocols) {
		return nil, false
	}
	return o.Protocols, true
}

// HasProtocols returns a boolean if a field has been set.
func (o *GetSwapDto) HasProtocols() bool {
	if o != nil && !IsNil(o.Protocols) {
		return true
	}

	return false
}

// SetProtocols gets a reference to the given string and assigns it to the Protocols field.
func (o *GetSwapDto) SetProtocols(v string) {
	o.Protocols = &v
}

// GetFee returns the Fee field value if set, zero value otherwise.
func (o *GetSwapDto) GetFee() string {
	if o == nil || IsNil(o.Fee) {
		var ret string
		return ret
	}
	return *o.Fee
}

// GetFeeOk returns a tuple with the Fee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSwapDto) GetFeeOk() (*string, bool) {
	if o == nil || IsNil(o.Fee) {
		return nil, false
	}
	return o.Fee, true
}

// HasFee returns a boolean if a field has been set.
func (o *GetSwapDto) HasFee() bool {
	if o != nil && !IsNil(o.Fee) {
		return true
	}

	return false
}

// SetFee gets a reference to the given string and assigns it to the Fee field.
func (o *GetSwapDto) SetFee(v string) {
	o.Fee = &v
}

// GetDisableEstimate returns the DisableEstimate field value if set, zero value otherwise.
func (o *GetSwapDto) GetDisableEstimate() bool {
	if o == nil || IsNil(o.DisableEstimate) {
		var ret bool
		return ret
	}
	return *o.DisableEstimate
}

// GetDisableEstimateOk returns a tuple with the DisableEstimate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSwapDto) GetDisableEstimateOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableEstimate) {
		return nil, false
	}
	return o.DisableEstimate, true
}

// HasDisableEstimate returns a boolean if a field has been set.
func (o *GetSwapDto) HasDisableEstimate() bool {
	if o != nil && !IsNil(o.DisableEstimate) {
		return true
	}

	return false
}

// SetDisableEstimate gets a reference to the given bool and assigns it to the DisableEstimate field.
func (o *GetSwapDto) SetDisableEstimate(v bool) {
	o.DisableEstimate = &v
}

// GetPermit returns the Permit field value if set, zero value otherwise.
func (o *GetSwapDto) GetPermit() string {
	if o == nil || IsNil(o.Permit) {
		var ret string
		return ret
	}
	return *o.Permit
}

// GetPermitOk returns a tuple with the Permit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSwapDto) GetPermitOk() (*string, bool) {
	if o == nil || IsNil(o.Permit) {
		return nil, false
	}
	return o.Permit, true
}

// HasPermit returns a boolean if a field has been set.
func (o *GetSwapDto) HasPermit() bool {
	if o != nil && !IsNil(o.Permit) {
		return true
	}

	return false
}

// SetPermit gets a reference to the given string and assigns it to the Permit field.
func (o *GetSwapDto) SetPermit(v string) {
	o.Permit = &v
}

// GetIncludeTokensInfo returns the IncludeTokensInfo field value if set, zero value otherwise.
func (o *GetSwapDto) GetIncludeTokensInfo() bool {
	if o == nil || IsNil(o.IncludeTokensInfo) {
		var ret bool
		return ret
	}
	return *o.IncludeTokensInfo
}

// GetIncludeTokensInfoOk returns a tuple with the IncludeTokensInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSwapDto) GetIncludeTokensInfoOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludeTokensInfo) {
		return nil, false
	}
	return o.IncludeTokensInfo, true
}

// HasIncludeTokensInfo returns a boolean if a field has been set.
func (o *GetSwapDto) HasIncludeTokensInfo() bool {
	if o != nil && !IsNil(o.IncludeTokensInfo) {
		return true
	}

	return false
}

// SetIncludeTokensInfo gets a reference to the given bool and assigns it to the IncludeTokensInfo field.
func (o *GetSwapDto) SetIncludeTokensInfo(v bool) {
	o.IncludeTokensInfo = &v
}

// GetIncludeProtocols returns the IncludeProtocols field value if set, zero value otherwise.
func (o *GetSwapDto) GetIncludeProtocols() bool {
	if o == nil || IsNil(o.IncludeProtocols) {
		var ret bool
		return ret
	}
	return *o.IncludeProtocols
}

// GetIncludeProtocolsOk returns a tuple with the IncludeProtocols field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSwapDto) GetIncludeProtocolsOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludeProtocols) {
		return nil, false
	}
	return o.IncludeProtocols, true
}

// HasIncludeProtocols returns a boolean if a field has been set.
func (o *GetSwapDto) HasIncludeProtocols() bool {
	if o != nil && !IsNil(o.IncludeProtocols) {
		return true
	}

	return false
}

// SetIncludeProtocols gets a reference to the given bool and assigns it to the IncludeProtocols field.
func (o *GetSwapDto) SetIncludeProtocols(v bool) {
	o.IncludeProtocols = &v
}

// GetCompatibility returns the Compatibility field value if set, zero value otherwise.
func (o *GetSwapDto) GetCompatibility() bool {
	if o == nil || IsNil(o.Compatibility) {
		var ret bool
		return ret
	}
	return *o.Compatibility
}

// GetCompatibilityOk returns a tuple with the Compatibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSwapDto) GetCompatibilityOk() (*bool, bool) {
	if o == nil || IsNil(o.Compatibility) {
		return nil, false
	}
	return o.Compatibility, true
}

// HasCompatibility returns a boolean if a field has been set.
func (o *GetSwapDto) HasCompatibility() bool {
	if o != nil && !IsNil(o.Compatibility) {
		return true
	}

	return false
}

// SetCompatibility gets a reference to the given bool and assigns it to the Compatibility field.
func (o *GetSwapDto) SetCompatibility(v bool) {
	o.Compatibility = &v
}

// GetAllowPartialFill returns the AllowPartialFill field value if set, zero value otherwise.
func (o *GetSwapDto) GetAllowPartialFill() bool {
	if o == nil || IsNil(o.AllowPartialFill) {
		var ret bool
		return ret
	}
	return *o.AllowPartialFill
}

// GetAllowPartialFillOk returns a tuple with the AllowPartialFill field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSwapDto) GetAllowPartialFillOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowPartialFill) {
		return nil, false
	}
	return o.AllowPartialFill, true
}

// HasAllowPartialFill returns a boolean if a field has been set.
func (o *GetSwapDto) HasAllowPartialFill() bool {
	if o != nil && !IsNil(o.AllowPartialFill) {
		return true
	}

	return false
}

// SetAllowPartialFill gets a reference to the given bool and assigns it to the AllowPartialFill field.
func (o *GetSwapDto) SetAllowPartialFill(v bool) {
	o.AllowPartialFill = &v
}

// GetParts returns the Parts field value if set, zero value otherwise.
func (o *GetSwapDto) GetParts() string {
	if o == nil || IsNil(o.Parts) {
		var ret string
		return ret
	}
	return *o.Parts
}

// GetPartsOk returns a tuple with the Parts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSwapDto) GetPartsOk() (*string, bool) {
	if o == nil || IsNil(o.Parts) {
		return nil, false
	}
	return o.Parts, true
}

// HasParts returns a boolean if a field has been set.
func (o *GetSwapDto) HasParts() bool {
	if o != nil && !IsNil(o.Parts) {
		return true
	}

	return false
}

// SetParts gets a reference to the given string and assigns it to the Parts field.
func (o *GetSwapDto) SetParts(v string) {
	o.Parts = &v
}

// GetMainRouteParts returns the MainRouteParts field value if set, zero value otherwise.
func (o *GetSwapDto) GetMainRouteParts() string {
	if o == nil || IsNil(o.MainRouteParts) {
		var ret string
		return ret
	}
	return *o.MainRouteParts
}

// GetMainRoutePartsOk returns a tuple with the MainRouteParts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSwapDto) GetMainRoutePartsOk() (*string, bool) {
	if o == nil || IsNil(o.MainRouteParts) {
		return nil, false
	}
	return o.MainRouteParts, true
}

// HasMainRouteParts returns a boolean if a field has been set.
func (o *GetSwapDto) HasMainRouteParts() bool {
	if o != nil && !IsNil(o.MainRouteParts) {
		return true
	}

	return false
}

// SetMainRouteParts gets a reference to the given string and assigns it to the MainRouteParts field.
func (o *GetSwapDto) SetMainRouteParts(v string) {
	o.MainRouteParts = &v
}

// GetConnectorTokens returns the ConnectorTokens field value if set, zero value otherwise.
func (o *GetSwapDto) GetConnectorTokens() string {
	if o == nil || IsNil(o.ConnectorTokens) {
		var ret string
		return ret
	}
	return *o.ConnectorTokens
}

// GetConnectorTokensOk returns a tuple with the ConnectorTokens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSwapDto) GetConnectorTokensOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectorTokens) {
		return nil, false
	}
	return o.ConnectorTokens, true
}

// HasConnectorTokens returns a boolean if a field has been set.
func (o *GetSwapDto) HasConnectorTokens() bool {
	if o != nil && !IsNil(o.ConnectorTokens) {
		return true
	}

	return false
}

// SetConnectorTokens gets a reference to the given string and assigns it to the ConnectorTokens field.
func (o *GetSwapDto) SetConnectorTokens(v string) {
	o.ConnectorTokens = &v
}

// GetComplexityLevel returns the ComplexityLevel field value if set, zero value otherwise.
func (o *GetSwapDto) GetComplexityLevel() string {
	if o == nil || IsNil(o.ComplexityLevel) {
		var ret string
		return ret
	}
	return *o.ComplexityLevel
}

// GetComplexityLevelOk returns a tuple with the ComplexityLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSwapDto) GetComplexityLevelOk() (*string, bool) {
	if o == nil || IsNil(o.ComplexityLevel) {
		return nil, false
	}
	return o.ComplexityLevel, true
}

// HasComplexityLevel returns a boolean if a field has been set.
func (o *GetSwapDto) HasComplexityLevel() bool {
	if o != nil && !IsNil(o.ComplexityLevel) {
		return true
	}

	return false
}

// SetComplexityLevel gets a reference to the given string and assigns it to the ComplexityLevel field.
func (o *GetSwapDto) SetComplexityLevel(v string) {
	o.ComplexityLevel = &v
}

// GetGasLimit returns the GasLimit field value if set, zero value otherwise.
func (o *GetSwapDto) GetGasLimit() string {
	if o == nil || IsNil(o.GasLimit) {
		var ret string
		return ret
	}
	return *o.GasLimit
}

// GetGasLimitOk returns a tuple with the GasLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSwapDto) GetGasLimitOk() (*string, bool) {
	if o == nil || IsNil(o.GasLimit) {
		return nil, false
	}
	return o.GasLimit, true
}

// HasGasLimit returns a boolean if a field has been set.
func (o *GetSwapDto) HasGasLimit() bool {
	if o != nil && !IsNil(o.GasLimit) {
		return true
	}

	return false
}

// SetGasLimit gets a reference to the given string and assigns it to the GasLimit field.
func (o *GetSwapDto) SetGasLimit(v string) {
	o.GasLimit = &v
}

// GetGasPrice returns the GasPrice field value if set, zero value otherwise.
func (o *GetSwapDto) GetGasPrice() string {
	if o == nil || IsNil(o.GasPrice) {
		var ret string
		return ret
	}
	return *o.GasPrice
}

// GetGasPriceOk returns a tuple with the GasPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSwapDto) GetGasPriceOk() (*string, bool) {
	if o == nil || IsNil(o.GasPrice) {
		return nil, false
	}
	return o.GasPrice, true
}

// HasGasPrice returns a boolean if a field has been set.
func (o *GetSwapDto) HasGasPrice() bool {
	if o != nil && !IsNil(o.GasPrice) {
		return true
	}

	return false
}

// SetGasPrice gets a reference to the given string and assigns it to the GasPrice field.
func (o *GetSwapDto) SetGasPrice(v string) {
	o.GasPrice = &v
}

// GetReferrer returns the Referrer field value if set, zero value otherwise.
func (o *GetSwapDto) GetReferrer() string {
	if o == nil || IsNil(o.Referrer) {
		var ret string
		return ret
	}
	return *o.Referrer
}

// GetReferrerOk returns a tuple with the Referrer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSwapDto) GetReferrerOk() (*string, bool) {
	if o == nil || IsNil(o.Referrer) {
		return nil, false
	}
	return o.Referrer, true
}

// HasReferrer returns a boolean if a field has been set.
func (o *GetSwapDto) HasReferrer() bool {
	if o != nil && !IsNil(o.Referrer) {
		return true
	}

	return false
}

// SetReferrer gets a reference to the given string and assigns it to the Referrer field.
func (o *GetSwapDto) SetReferrer(v string) {
	o.Referrer = &v
}

// GetReceiver returns the Receiver field value if set, zero value otherwise.
func (o *GetSwapDto) GetReceiver() string {
	if o == nil || IsNil(o.Receiver) {
		var ret string
		return ret
	}
	return *o.Receiver
}

// GetReceiverOk returns a tuple with the Receiver field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSwapDto) GetReceiverOk() (*string, bool) {
	if o == nil || IsNil(o.Receiver) {
		return nil, false
	}
	return o.Receiver, true
}

// HasReceiver returns a boolean if a field has been set.
func (o *GetSwapDto) HasReceiver() bool {
	if o != nil && !IsNil(o.Receiver) {
		return true
	}

	return false
}

// SetReceiver gets a reference to the given string and assigns it to the Receiver field.
func (o *GetSwapDto) SetReceiver(v string) {
	o.Receiver = &v
}

// GetChainId returns the ChainId field value if set, zero value otherwise.
func (o *GetSwapDto) GetChainId() float64 {
	if o == nil || IsNil(o.ChainId) {
		var ret float64
		return ret
	}
	return *o.ChainId
}

// GetChainIdOk returns a tuple with the ChainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSwapDto) GetChainIdOk() (*float64, bool) {
	if o == nil || IsNil(o.ChainId) {
		return nil, false
	}
	return o.ChainId, true
}

// HasChainId returns a boolean if a field has been set.
func (o *GetSwapDto) HasChainId() bool {
	if o != nil && !IsNil(o.ChainId) {
		return true
	}

	return false
}

// SetChainId gets a reference to the given float64 and assigns it to the ChainId field.
func (o *GetSwapDto) SetChainId(v float64) {
	o.ChainId = &v
}

func (o GetSwapDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSwapDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["src"] = o.Src
	toSerialize["dst"] = o.Dst
	toSerialize["amount"] = o.Amount
	toSerialize["from"] = o.From
	toSerialize["slippage"] = o.Slippage
	if !IsNil(o.Protocols) {
		toSerialize["protocols"] = o.Protocols
	}
	if !IsNil(o.Fee) {
		toSerialize["fee"] = o.Fee
	}
	if !IsNil(o.DisableEstimate) {
		toSerialize["disableEstimate"] = o.DisableEstimate
	}
	if !IsNil(o.Permit) {
		toSerialize["permit"] = o.Permit
	}
	if !IsNil(o.IncludeTokensInfo) {
		toSerialize["includeTokensInfo"] = o.IncludeTokensInfo
	}
	if !IsNil(o.IncludeProtocols) {
		toSerialize["includeProtocols"] = o.IncludeProtocols
	}
	if !IsNil(o.Compatibility) {
		toSerialize["compatibility"] = o.Compatibility
	}
	if !IsNil(o.AllowPartialFill) {
		toSerialize["allowPartialFill"] = o.AllowPartialFill
	}
	if !IsNil(o.Parts) {
		toSerialize["parts"] = o.Parts
	}
	if !IsNil(o.MainRouteParts) {
		toSerialize["mainRouteParts"] = o.MainRouteParts
	}
	if !IsNil(o.ConnectorTokens) {
		toSerialize["connectorTokens"] = o.ConnectorTokens
	}
	if !IsNil(o.ComplexityLevel) {
		toSerialize["complexityLevel"] = o.ComplexityLevel
	}
	if !IsNil(o.GasLimit) {
		toSerialize["gasLimit"] = o.GasLimit
	}
	if !IsNil(o.GasPrice) {
		toSerialize["gasPrice"] = o.GasPrice
	}
	if !IsNil(o.Referrer) {
		toSerialize["referrer"] = o.Referrer
	}
	if !IsNil(o.Receiver) {
		toSerialize["receiver"] = o.Receiver
	}
	if !IsNil(o.ChainId) {
		toSerialize["chainId"] = o.ChainId
	}
	return toSerialize, nil
}

func (o *GetSwapDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"src",
		"dst",
		"amount",
		"from",
		"slippage",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetSwapDto := _GetSwapDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetSwapDto)

	if err != nil {
		return err
	}

	*o = GetSwapDto(varGetSwapDto)

	return err
}

type NullableGetSwapDto struct {
	value *GetSwapDto
	isSet bool
}

func (v NullableGetSwapDto) Get() *GetSwapDto {
	return v.value
}

func (v *NullableGetSwapDto) Set(val *GetSwapDto) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSwapDto) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSwapDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSwapDto(val *GetSwapDto) *NullableGetSwapDto {
	return &NullableGetSwapDto{value: val, isSet: true}
}

func (v NullableGetSwapDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSwapDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



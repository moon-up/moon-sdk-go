/*
moon-vault-api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moonsdk

import (
	"encoding/json"
)

// checks if the AccountData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountData{}

// AccountData struct for AccountData
type AccountData struct {
	Keys []string `json:"keys,omitempty"`
	Address *string `json:"address,omitempty"`
}

// NewAccountData instantiates a new AccountData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountData() *AccountData {
	this := AccountData{}
	return &this
}

// NewAccountDataWithDefaults instantiates a new AccountData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountDataWithDefaults() *AccountData {
	this := AccountData{}
	return &this
}

// GetKeys returns the Keys field value if set, zero value otherwise.
func (o *AccountData) GetKeys() []string {
	if o == nil || IsNil(o.Keys) {
		var ret []string
		return ret
	}
	return o.Keys
}

// GetKeysOk returns a tuple with the Keys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountData) GetKeysOk() ([]string, bool) {
	if o == nil || IsNil(o.Keys) {
		return nil, false
	}
	return o.Keys, true
}

// HasKeys returns a boolean if a field has been set.
func (o *AccountData) HasKeys() bool {
	if o != nil && !IsNil(o.Keys) {
		return true
	}

	return false
}

// SetKeys gets a reference to the given []string and assigns it to the Keys field.
func (o *AccountData) SetKeys(v []string) {
	o.Keys = v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *AccountData) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountData) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *AccountData) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *AccountData) SetAddress(v string) {
	o.Address = &v
}

func (o AccountData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Keys) {
		toSerialize["keys"] = o.Keys
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	return toSerialize, nil
}

type NullableAccountData struct {
	value *AccountData
	isSet bool
}

func (v NullableAccountData) Get() *AccountData {
	return v.value
}

func (v *NullableAccountData) Set(val *AccountData) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountData) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountData(val *AccountData) *NullableAccountData {
	return &NullableAccountData{value: val, isSet: true}
}

func (v NullableAccountData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
moon-vault-api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moonsdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TransactionInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactionInput{}

// TransactionInput struct for TransactionInput
type TransactionInput struct {
	SupportedParams TransactionInputSupportedParams `json:"supportedParams"`
	Wallet TransactionInputWallet `json:"wallet"`
	MetaData TransactionInputMetaData `json:"metaData"`
	OriginatingHost string `json:"originatingHost"`
	PartnerContext string `json:"partnerContext"`
	Uuid string `json:"uuid"`
	Network string `json:"network"`
	PaymentMethod string `json:"paymentMethod"`
	Type string `json:"type"`
	Amount float64 `json:"amount"`
	Destination string `json:"destination"`
	Source string `json:"source"`
	Onramp string `json:"onramp"`
}

type _TransactionInput TransactionInput

// NewTransactionInput instantiates a new TransactionInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionInput(supportedParams TransactionInputSupportedParams, wallet TransactionInputWallet, metaData TransactionInputMetaData, originatingHost string, partnerContext string, uuid string, network string, paymentMethod string, type_ string, amount float64, destination string, source string, onramp string) *TransactionInput {
	this := TransactionInput{}
	this.SupportedParams = supportedParams
	this.Wallet = wallet
	this.MetaData = metaData
	this.OriginatingHost = originatingHost
	this.PartnerContext = partnerContext
	this.Uuid = uuid
	this.Network = network
	this.PaymentMethod = paymentMethod
	this.Type = type_
	this.Amount = amount
	this.Destination = destination
	this.Source = source
	this.Onramp = onramp
	return &this
}

// NewTransactionInputWithDefaults instantiates a new TransactionInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionInputWithDefaults() *TransactionInput {
	this := TransactionInput{}
	return &this
}

// GetSupportedParams returns the SupportedParams field value
func (o *TransactionInput) GetSupportedParams() TransactionInputSupportedParams {
	if o == nil {
		var ret TransactionInputSupportedParams
		return ret
	}

	return o.SupportedParams
}

// GetSupportedParamsOk returns a tuple with the SupportedParams field value
// and a boolean to check if the value has been set.
func (o *TransactionInput) GetSupportedParamsOk() (*TransactionInputSupportedParams, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SupportedParams, true
}

// SetSupportedParams sets field value
func (o *TransactionInput) SetSupportedParams(v TransactionInputSupportedParams) {
	o.SupportedParams = v
}

// GetWallet returns the Wallet field value
func (o *TransactionInput) GetWallet() TransactionInputWallet {
	if o == nil {
		var ret TransactionInputWallet
		return ret
	}

	return o.Wallet
}

// GetWalletOk returns a tuple with the Wallet field value
// and a boolean to check if the value has been set.
func (o *TransactionInput) GetWalletOk() (*TransactionInputWallet, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Wallet, true
}

// SetWallet sets field value
func (o *TransactionInput) SetWallet(v TransactionInputWallet) {
	o.Wallet = v
}

// GetMetaData returns the MetaData field value
func (o *TransactionInput) GetMetaData() TransactionInputMetaData {
	if o == nil {
		var ret TransactionInputMetaData
		return ret
	}

	return o.MetaData
}

// GetMetaDataOk returns a tuple with the MetaData field value
// and a boolean to check if the value has been set.
func (o *TransactionInput) GetMetaDataOk() (*TransactionInputMetaData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetaData, true
}

// SetMetaData sets field value
func (o *TransactionInput) SetMetaData(v TransactionInputMetaData) {
	o.MetaData = v
}

// GetOriginatingHost returns the OriginatingHost field value
func (o *TransactionInput) GetOriginatingHost() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OriginatingHost
}

// GetOriginatingHostOk returns a tuple with the OriginatingHost field value
// and a boolean to check if the value has been set.
func (o *TransactionInput) GetOriginatingHostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OriginatingHost, true
}

// SetOriginatingHost sets field value
func (o *TransactionInput) SetOriginatingHost(v string) {
	o.OriginatingHost = v
}

// GetPartnerContext returns the PartnerContext field value
func (o *TransactionInput) GetPartnerContext() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PartnerContext
}

// GetPartnerContextOk returns a tuple with the PartnerContext field value
// and a boolean to check if the value has been set.
func (o *TransactionInput) GetPartnerContextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PartnerContext, true
}

// SetPartnerContext sets field value
func (o *TransactionInput) SetPartnerContext(v string) {
	o.PartnerContext = v
}

// GetUuid returns the Uuid field value
func (o *TransactionInput) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *TransactionInput) GetUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *TransactionInput) SetUuid(v string) {
	o.Uuid = v
}

// GetNetwork returns the Network field value
func (o *TransactionInput) GetNetwork() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Network
}

// GetNetworkOk returns a tuple with the Network field value
// and a boolean to check if the value has been set.
func (o *TransactionInput) GetNetworkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Network, true
}

// SetNetwork sets field value
func (o *TransactionInput) SetNetwork(v string) {
	o.Network = v
}

// GetPaymentMethod returns the PaymentMethod field value
func (o *TransactionInput) GetPaymentMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PaymentMethod
}

// GetPaymentMethodOk returns a tuple with the PaymentMethod field value
// and a boolean to check if the value has been set.
func (o *TransactionInput) GetPaymentMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentMethod, true
}

// SetPaymentMethod sets field value
func (o *TransactionInput) SetPaymentMethod(v string) {
	o.PaymentMethod = v
}

// GetType returns the Type field value
func (o *TransactionInput) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *TransactionInput) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *TransactionInput) SetType(v string) {
	o.Type = v
}

// GetAmount returns the Amount field value
func (o *TransactionInput) GetAmount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *TransactionInput) GetAmountOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *TransactionInput) SetAmount(v float64) {
	o.Amount = v
}

// GetDestination returns the Destination field value
func (o *TransactionInput) GetDestination() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value
// and a boolean to check if the value has been set.
func (o *TransactionInput) GetDestinationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Destination, true
}

// SetDestination sets field value
func (o *TransactionInput) SetDestination(v string) {
	o.Destination = v
}

// GetSource returns the Source field value
func (o *TransactionInput) GetSource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *TransactionInput) GetSourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *TransactionInput) SetSource(v string) {
	o.Source = v
}

// GetOnramp returns the Onramp field value
func (o *TransactionInput) GetOnramp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Onramp
}

// GetOnrampOk returns a tuple with the Onramp field value
// and a boolean to check if the value has been set.
func (o *TransactionInput) GetOnrampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Onramp, true
}

// SetOnramp sets field value
func (o *TransactionInput) SetOnramp(v string) {
	o.Onramp = v
}

func (o TransactionInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactionInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["supportedParams"] = o.SupportedParams
	toSerialize["wallet"] = o.Wallet
	toSerialize["metaData"] = o.MetaData
	toSerialize["originatingHost"] = o.OriginatingHost
	toSerialize["partnerContext"] = o.PartnerContext
	toSerialize["uuid"] = o.Uuid
	toSerialize["network"] = o.Network
	toSerialize["paymentMethod"] = o.PaymentMethod
	toSerialize["type"] = o.Type
	toSerialize["amount"] = o.Amount
	toSerialize["destination"] = o.Destination
	toSerialize["source"] = o.Source
	toSerialize["onramp"] = o.Onramp
	return toSerialize, nil
}

func (o *TransactionInput) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"supportedParams",
		"wallet",
		"metaData",
		"originatingHost",
		"partnerContext",
		"uuid",
		"network",
		"paymentMethod",
		"type",
		"amount",
		"destination",
		"source",
		"onramp",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTransactionInput := _TransactionInput{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTransactionInput)

	if err != nil {
		return err
	}

	*o = TransactionInput(varTransactionInput)

	return err
}

type NullableTransactionInput struct {
	value *TransactionInput
	isSet bool
}

func (v NullableTransactionInput) Get() *TransactionInput {
	return v.value
}

func (v *NullableTransactionInput) Set(val *TransactionInput) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionInput) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionInput(val *TransactionInput) *NullableTransactionInput {
	return &NullableTransactionInput{value: val, isSet: true}
}

func (v NullableTransactionInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



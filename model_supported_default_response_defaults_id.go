/*
moon-vault-api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moonsdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SupportedDefaultResponseDefaultsId type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SupportedDefaultResponseDefaultsId{}

// SupportedDefaultResponseDefaultsId struct for SupportedDefaultResponseDefaultsId
type SupportedDefaultResponseDefaultsId struct {
	Provider string `json:"provider"`
	PaymentMethod string `json:"paymentMethod"`
	Amount float64 `json:"amount"`
	Target string `json:"target"`
	Source string `json:"source"`
}

type _SupportedDefaultResponseDefaultsId SupportedDefaultResponseDefaultsId

// NewSupportedDefaultResponseDefaultsId instantiates a new SupportedDefaultResponseDefaultsId object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSupportedDefaultResponseDefaultsId(provider string, paymentMethod string, amount float64, target string, source string) *SupportedDefaultResponseDefaultsId {
	this := SupportedDefaultResponseDefaultsId{}
	this.Provider = provider
	this.PaymentMethod = paymentMethod
	this.Amount = amount
	this.Target = target
	this.Source = source
	return &this
}

// NewSupportedDefaultResponseDefaultsIdWithDefaults instantiates a new SupportedDefaultResponseDefaultsId object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSupportedDefaultResponseDefaultsIdWithDefaults() *SupportedDefaultResponseDefaultsId {
	this := SupportedDefaultResponseDefaultsId{}
	return &this
}

// GetProvider returns the Provider field value
func (o *SupportedDefaultResponseDefaultsId) GetProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Provider
}

// GetProviderOk returns a tuple with the Provider field value
// and a boolean to check if the value has been set.
func (o *SupportedDefaultResponseDefaultsId) GetProviderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Provider, true
}

// SetProvider sets field value
func (o *SupportedDefaultResponseDefaultsId) SetProvider(v string) {
	o.Provider = v
}

// GetPaymentMethod returns the PaymentMethod field value
func (o *SupportedDefaultResponseDefaultsId) GetPaymentMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PaymentMethod
}

// GetPaymentMethodOk returns a tuple with the PaymentMethod field value
// and a boolean to check if the value has been set.
func (o *SupportedDefaultResponseDefaultsId) GetPaymentMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentMethod, true
}

// SetPaymentMethod sets field value
func (o *SupportedDefaultResponseDefaultsId) SetPaymentMethod(v string) {
	o.PaymentMethod = v
}

// GetAmount returns the Amount field value
func (o *SupportedDefaultResponseDefaultsId) GetAmount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *SupportedDefaultResponseDefaultsId) GetAmountOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *SupportedDefaultResponseDefaultsId) SetAmount(v float64) {
	o.Amount = v
}

// GetTarget returns the Target field value
func (o *SupportedDefaultResponseDefaultsId) GetTarget() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Target
}

// GetTargetOk returns a tuple with the Target field value
// and a boolean to check if the value has been set.
func (o *SupportedDefaultResponseDefaultsId) GetTargetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Target, true
}

// SetTarget sets field value
func (o *SupportedDefaultResponseDefaultsId) SetTarget(v string) {
	o.Target = v
}

// GetSource returns the Source field value
func (o *SupportedDefaultResponseDefaultsId) GetSource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *SupportedDefaultResponseDefaultsId) GetSourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *SupportedDefaultResponseDefaultsId) SetSource(v string) {
	o.Source = v
}

func (o SupportedDefaultResponseDefaultsId) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SupportedDefaultResponseDefaultsId) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["provider"] = o.Provider
	toSerialize["paymentMethod"] = o.PaymentMethod
	toSerialize["amount"] = o.Amount
	toSerialize["target"] = o.Target
	toSerialize["source"] = o.Source
	return toSerialize, nil
}

func (o *SupportedDefaultResponseDefaultsId) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"provider",
		"paymentMethod",
		"amount",
		"target",
		"source",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSupportedDefaultResponseDefaultsId := _SupportedDefaultResponseDefaultsId{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSupportedDefaultResponseDefaultsId)

	if err != nil {
		return err
	}

	*o = SupportedDefaultResponseDefaultsId(varSupportedDefaultResponseDefaultsId)

	return err
}

type NullableSupportedDefaultResponseDefaultsId struct {
	value *SupportedDefaultResponseDefaultsId
	isSet bool
}

func (v NullableSupportedDefaultResponseDefaultsId) Get() *SupportedDefaultResponseDefaultsId {
	return v.value
}

func (v *NullableSupportedDefaultResponseDefaultsId) Set(val *SupportedDefaultResponseDefaultsId) {
	v.value = val
	v.isSet = true
}

func (v NullableSupportedDefaultResponseDefaultsId) IsSet() bool {
	return v.isSet
}

func (v *NullableSupportedDefaultResponseDefaultsId) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSupportedDefaultResponseDefaultsId(val *SupportedDefaultResponseDefaultsId) *NullableSupportedDefaultResponseDefaultsId {
	return &NullableSupportedDefaultResponseDefaultsId{value: val, isSet: true}
}

func (v NullableSupportedDefaultResponseDefaultsId) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSupportedDefaultResponseDefaultsId) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



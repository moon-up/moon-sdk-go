/*
moon-vault-api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moonsdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TransactionInputMetaData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactionInputMetaData{}

// TransactionInputMetaData struct for TransactionInputMetaData
type TransactionInputMetaData struct {
	QuoteId string `json:"quoteId"`
}

type _TransactionInputMetaData TransactionInputMetaData

// NewTransactionInputMetaData instantiates a new TransactionInputMetaData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionInputMetaData(quoteId string) *TransactionInputMetaData {
	this := TransactionInputMetaData{}
	this.QuoteId = quoteId
	return &this
}

// NewTransactionInputMetaDataWithDefaults instantiates a new TransactionInputMetaData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionInputMetaDataWithDefaults() *TransactionInputMetaData {
	this := TransactionInputMetaData{}
	return &this
}

// GetQuoteId returns the QuoteId field value
func (o *TransactionInputMetaData) GetQuoteId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.QuoteId
}

// GetQuoteIdOk returns a tuple with the QuoteId field value
// and a boolean to check if the value has been set.
func (o *TransactionInputMetaData) GetQuoteIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QuoteId, true
}

// SetQuoteId sets field value
func (o *TransactionInputMetaData) SetQuoteId(v string) {
	o.QuoteId = v
}

func (o TransactionInputMetaData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactionInputMetaData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["quoteId"] = o.QuoteId
	return toSerialize, nil
}

func (o *TransactionInputMetaData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"quoteId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTransactionInputMetaData := _TransactionInputMetaData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTransactionInputMetaData)

	if err != nil {
		return err
	}

	*o = TransactionInputMetaData(varTransactionInputMetaData)

	return err
}

type NullableTransactionInputMetaData struct {
	value *TransactionInputMetaData
	isSet bool
}

func (v NullableTransactionInputMetaData) Get() *TransactionInputMetaData {
	return v.value
}

func (v *NullableTransactionInputMetaData) Set(val *TransactionInputMetaData) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionInputMetaData) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionInputMetaData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionInputMetaData(val *TransactionInputMetaData) *NullableTransactionInputMetaData {
	return &NullableTransactionInputMetaData{value: val, isSet: true}
}

func (v NullableTransactionInputMetaData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionInputMetaData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



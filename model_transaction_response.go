/*
moon-vault-api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moonsdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TransactionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactionResponse{}

// TransactionResponse struct for TransactionResponse
type TransactionResponse struct {
	Message string `json:"message"`
	Tx TransactionResponseTx `json:"tx"`
	Info TransactionResponseInfo `json:"info"`
	ChainId float64 `json:"chainId"`
	CurrentBlockNumber float64 `json:"currentBlockNumber"`
}

type _TransactionResponse TransactionResponse

// NewTransactionResponse instantiates a new TransactionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionResponse(message string, tx TransactionResponseTx, info TransactionResponseInfo, chainId float64, currentBlockNumber float64) *TransactionResponse {
	this := TransactionResponse{}
	this.Message = message
	this.Tx = tx
	this.Info = info
	this.ChainId = chainId
	this.CurrentBlockNumber = currentBlockNumber
	return &this
}

// NewTransactionResponseWithDefaults instantiates a new TransactionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionResponseWithDefaults() *TransactionResponse {
	this := TransactionResponse{}
	return &this
}

// GetMessage returns the Message field value
func (o *TransactionResponse) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *TransactionResponse) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *TransactionResponse) SetMessage(v string) {
	o.Message = v
}

// GetTx returns the Tx field value
func (o *TransactionResponse) GetTx() TransactionResponseTx {
	if o == nil {
		var ret TransactionResponseTx
		return ret
	}

	return o.Tx
}

// GetTxOk returns a tuple with the Tx field value
// and a boolean to check if the value has been set.
func (o *TransactionResponse) GetTxOk() (*TransactionResponseTx, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tx, true
}

// SetTx sets field value
func (o *TransactionResponse) SetTx(v TransactionResponseTx) {
	o.Tx = v
}

// GetInfo returns the Info field value
func (o *TransactionResponse) GetInfo() TransactionResponseInfo {
	if o == nil {
		var ret TransactionResponseInfo
		return ret
	}

	return o.Info
}

// GetInfoOk returns a tuple with the Info field value
// and a boolean to check if the value has been set.
func (o *TransactionResponse) GetInfoOk() (*TransactionResponseInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Info, true
}

// SetInfo sets field value
func (o *TransactionResponse) SetInfo(v TransactionResponseInfo) {
	o.Info = v
}

// GetChainId returns the ChainId field value
func (o *TransactionResponse) GetChainId() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.ChainId
}

// GetChainIdOk returns a tuple with the ChainId field value
// and a boolean to check if the value has been set.
func (o *TransactionResponse) GetChainIdOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChainId, true
}

// SetChainId sets field value
func (o *TransactionResponse) SetChainId(v float64) {
	o.ChainId = v
}

// GetCurrentBlockNumber returns the CurrentBlockNumber field value
func (o *TransactionResponse) GetCurrentBlockNumber() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.CurrentBlockNumber
}

// GetCurrentBlockNumberOk returns a tuple with the CurrentBlockNumber field value
// and a boolean to check if the value has been set.
func (o *TransactionResponse) GetCurrentBlockNumberOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrentBlockNumber, true
}

// SetCurrentBlockNumber sets field value
func (o *TransactionResponse) SetCurrentBlockNumber(v float64) {
	o.CurrentBlockNumber = v
}

func (o TransactionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["message"] = o.Message
	toSerialize["tx"] = o.Tx
	toSerialize["info"] = o.Info
	toSerialize["chainId"] = o.ChainId
	toSerialize["currentBlockNumber"] = o.CurrentBlockNumber
	return toSerialize, nil
}

func (o *TransactionResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"message",
		"tx",
		"info",
		"chainId",
		"currentBlockNumber",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTransactionResponse := _TransactionResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTransactionResponse)

	if err != nil {
		return err
	}

	*o = TransactionResponse(varTransactionResponse)

	return err
}

type NullableTransactionResponse struct {
	value *TransactionResponse
	isSet bool
}

func (v NullableTransactionResponse) Get() *TransactionResponse {
	return v.value
}

func (v *NullableTransactionResponse) Set(val *TransactionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionResponse(val *TransactionResponse) *NullableTransactionResponse {
	return &NullableTransactionResponse{value: val, isSet: true}
}

func (v NullableTransactionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



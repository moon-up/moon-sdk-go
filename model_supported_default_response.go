/*
moon-vault-api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moonsdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SupportedDefaultResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SupportedDefaultResponse{}

// SupportedDefaultResponse struct for SupportedDefaultResponse
type SupportedDefaultResponse struct {
	Defaults SupportedDefaultResponseDefaults `json:"defaults"`
	Recommended SupportedDefaultResponseDefaultsId `json:"recommended"`
}

type _SupportedDefaultResponse SupportedDefaultResponse

// NewSupportedDefaultResponse instantiates a new SupportedDefaultResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSupportedDefaultResponse(defaults SupportedDefaultResponseDefaults, recommended SupportedDefaultResponseDefaultsId) *SupportedDefaultResponse {
	this := SupportedDefaultResponse{}
	this.Defaults = defaults
	this.Recommended = recommended
	return &this
}

// NewSupportedDefaultResponseWithDefaults instantiates a new SupportedDefaultResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSupportedDefaultResponseWithDefaults() *SupportedDefaultResponse {
	this := SupportedDefaultResponse{}
	return &this
}

// GetDefaults returns the Defaults field value
func (o *SupportedDefaultResponse) GetDefaults() SupportedDefaultResponseDefaults {
	if o == nil {
		var ret SupportedDefaultResponseDefaults
		return ret
	}

	return o.Defaults
}

// GetDefaultsOk returns a tuple with the Defaults field value
// and a boolean to check if the value has been set.
func (o *SupportedDefaultResponse) GetDefaultsOk() (*SupportedDefaultResponseDefaults, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Defaults, true
}

// SetDefaults sets field value
func (o *SupportedDefaultResponse) SetDefaults(v SupportedDefaultResponseDefaults) {
	o.Defaults = v
}

// GetRecommended returns the Recommended field value
func (o *SupportedDefaultResponse) GetRecommended() SupportedDefaultResponseDefaultsId {
	if o == nil {
		var ret SupportedDefaultResponseDefaultsId
		return ret
	}

	return o.Recommended
}

// GetRecommendedOk returns a tuple with the Recommended field value
// and a boolean to check if the value has been set.
func (o *SupportedDefaultResponse) GetRecommendedOk() (*SupportedDefaultResponseDefaultsId, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Recommended, true
}

// SetRecommended sets field value
func (o *SupportedDefaultResponse) SetRecommended(v SupportedDefaultResponseDefaultsId) {
	o.Recommended = v
}

func (o SupportedDefaultResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SupportedDefaultResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["defaults"] = o.Defaults
	toSerialize["recommended"] = o.Recommended
	return toSerialize, nil
}

func (o *SupportedDefaultResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"defaults",
		"recommended",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSupportedDefaultResponse := _SupportedDefaultResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSupportedDefaultResponse)

	if err != nil {
		return err
	}

	*o = SupportedDefaultResponse(varSupportedDefaultResponse)

	return err
}

type NullableSupportedDefaultResponse struct {
	value *SupportedDefaultResponse
	isSet bool
}

func (v NullableSupportedDefaultResponse) Get() *SupportedDefaultResponse {
	return v.value
}

func (v *NullableSupportedDefaultResponse) Set(val *SupportedDefaultResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSupportedDefaultResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSupportedDefaultResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSupportedDefaultResponse(val *SupportedDefaultResponse) *NullableSupportedDefaultResponse {
	return &NullableSupportedDefaultResponse{value: val, isSet: true}
}

func (v NullableSupportedDefaultResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSupportedDefaultResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



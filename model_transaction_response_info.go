/*
moon-vault-api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moonsdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TransactionResponseInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactionResponseInfo{}

// TransactionResponseInfo struct for TransactionResponseInfo
type TransactionResponseInfo struct {
	ConveyorGas string `json:"conveyorGas"`
	AffiliateGas string `json:"affiliateGas"`
	AffiliateAggregator string `json:"affiliateAggregator"`
	AmountOut string `json:"amountOut"`
	AmountOutMin string `json:"amountOutMin"`
}

type _TransactionResponseInfo TransactionResponseInfo

// NewTransactionResponseInfo instantiates a new TransactionResponseInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionResponseInfo(conveyorGas string, affiliateGas string, affiliateAggregator string, amountOut string, amountOutMin string) *TransactionResponseInfo {
	this := TransactionResponseInfo{}
	this.ConveyorGas = conveyorGas
	this.AffiliateGas = affiliateGas
	this.AffiliateAggregator = affiliateAggregator
	this.AmountOut = amountOut
	this.AmountOutMin = amountOutMin
	return &this
}

// NewTransactionResponseInfoWithDefaults instantiates a new TransactionResponseInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionResponseInfoWithDefaults() *TransactionResponseInfo {
	this := TransactionResponseInfo{}
	return &this
}

// GetConveyorGas returns the ConveyorGas field value
func (o *TransactionResponseInfo) GetConveyorGas() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConveyorGas
}

// GetConveyorGasOk returns a tuple with the ConveyorGas field value
// and a boolean to check if the value has been set.
func (o *TransactionResponseInfo) GetConveyorGasOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConveyorGas, true
}

// SetConveyorGas sets field value
func (o *TransactionResponseInfo) SetConveyorGas(v string) {
	o.ConveyorGas = v
}

// GetAffiliateGas returns the AffiliateGas field value
func (o *TransactionResponseInfo) GetAffiliateGas() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AffiliateGas
}

// GetAffiliateGasOk returns a tuple with the AffiliateGas field value
// and a boolean to check if the value has been set.
func (o *TransactionResponseInfo) GetAffiliateGasOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AffiliateGas, true
}

// SetAffiliateGas sets field value
func (o *TransactionResponseInfo) SetAffiliateGas(v string) {
	o.AffiliateGas = v
}

// GetAffiliateAggregator returns the AffiliateAggregator field value
func (o *TransactionResponseInfo) GetAffiliateAggregator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AffiliateAggregator
}

// GetAffiliateAggregatorOk returns a tuple with the AffiliateAggregator field value
// and a boolean to check if the value has been set.
func (o *TransactionResponseInfo) GetAffiliateAggregatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AffiliateAggregator, true
}

// SetAffiliateAggregator sets field value
func (o *TransactionResponseInfo) SetAffiliateAggregator(v string) {
	o.AffiliateAggregator = v
}

// GetAmountOut returns the AmountOut field value
func (o *TransactionResponseInfo) GetAmountOut() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AmountOut
}

// GetAmountOutOk returns a tuple with the AmountOut field value
// and a boolean to check if the value has been set.
func (o *TransactionResponseInfo) GetAmountOutOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AmountOut, true
}

// SetAmountOut sets field value
func (o *TransactionResponseInfo) SetAmountOut(v string) {
	o.AmountOut = v
}

// GetAmountOutMin returns the AmountOutMin field value
func (o *TransactionResponseInfo) GetAmountOutMin() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AmountOutMin
}

// GetAmountOutMinOk returns a tuple with the AmountOutMin field value
// and a boolean to check if the value has been set.
func (o *TransactionResponseInfo) GetAmountOutMinOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AmountOutMin, true
}

// SetAmountOutMin sets field value
func (o *TransactionResponseInfo) SetAmountOutMin(v string) {
	o.AmountOutMin = v
}

func (o TransactionResponseInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactionResponseInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["conveyorGas"] = o.ConveyorGas
	toSerialize["affiliateGas"] = o.AffiliateGas
	toSerialize["affiliateAggregator"] = o.AffiliateAggregator
	toSerialize["amountOut"] = o.AmountOut
	toSerialize["amountOutMin"] = o.AmountOutMin
	return toSerialize, nil
}

func (o *TransactionResponseInfo) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"conveyorGas",
		"affiliateGas",
		"affiliateAggregator",
		"amountOut",
		"amountOutMin",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTransactionResponseInfo := _TransactionResponseInfo{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTransactionResponseInfo)

	if err != nil {
		return err
	}

	*o = TransactionResponseInfo(varTransactionResponseInfo)

	return err
}

type NullableTransactionResponseInfo struct {
	value *TransactionResponseInfo
	isSet bool
}

func (v NullableTransactionResponseInfo) Get() *TransactionResponseInfo {
	return v.value
}

func (v *NullableTransactionResponseInfo) Set(val *TransactionResponseInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionResponseInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionResponseInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionResponseInfo(val *TransactionResponseInfo) *NullableTransactionResponseInfo {
	return &NullableTransactionResponseInfo{value: val, isSet: true}
}

func (v NullableTransactionResponseInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionResponseInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
moon-vault-api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moonsdk

import (
	"encoding/json"
)

// checks if the EosInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EosInput{}

// EosInput struct for EosInput
type EosInput struct {
	Network *string `json:"network,omitempty"`
	PrivateKey *string `json:"private_key,omitempty"`
}

// NewEosInput instantiates a new EosInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEosInput() *EosInput {
	this := EosInput{}
	return &this
}

// NewEosInputWithDefaults instantiates a new EosInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEosInputWithDefaults() *EosInput {
	this := EosInput{}
	return &this
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *EosInput) GetNetwork() string {
	if o == nil || IsNil(o.Network) {
		var ret string
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EosInput) GetNetworkOk() (*string, bool) {
	if o == nil || IsNil(o.Network) {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *EosInput) HasNetwork() bool {
	if o != nil && !IsNil(o.Network) {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given string and assigns it to the Network field.
func (o *EosInput) SetNetwork(v string) {
	o.Network = &v
}

// GetPrivateKey returns the PrivateKey field value if set, zero value otherwise.
func (o *EosInput) GetPrivateKey() string {
	if o == nil || IsNil(o.PrivateKey) {
		var ret string
		return ret
	}
	return *o.PrivateKey
}

// GetPrivateKeyOk returns a tuple with the PrivateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EosInput) GetPrivateKeyOk() (*string, bool) {
	if o == nil || IsNil(o.PrivateKey) {
		return nil, false
	}
	return o.PrivateKey, true
}

// HasPrivateKey returns a boolean if a field has been set.
func (o *EosInput) HasPrivateKey() bool {
	if o != nil && !IsNil(o.PrivateKey) {
		return true
	}

	return false
}

// SetPrivateKey gets a reference to the given string and assigns it to the PrivateKey field.
func (o *EosInput) SetPrivateKey(v string) {
	o.PrivateKey = &v
}

func (o EosInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EosInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Network) {
		toSerialize["network"] = o.Network
	}
	if !IsNil(o.PrivateKey) {
		toSerialize["private_key"] = o.PrivateKey
	}
	return toSerialize, nil
}

type NullableEosInput struct {
	value *EosInput
	isSet bool
}

func (v NullableEosInput) Get() *EosInput {
	return v.value
}

func (v *NullableEosInput) Set(val *EosInput) {
	v.value = val
	v.isSet = true
}

func (v NullableEosInput) IsSet() bool {
	return v.isSet
}

func (v *NullableEosInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEosInput(val *EosInput) *NullableEosInput {
	return &NullableEosInput{value: val, isSet: true}
}

func (v NullableEosInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEosInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



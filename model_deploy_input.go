/*
moon-vault-api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moonsdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DeployInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeployInput{}

// DeployInput struct for DeployInput
type DeployInput struct {
	ChainId *string `json:"chain_id,omitempty"`
	Abi string `json:"abi"`
	Bytecode string `json:"bytecode"`
	ConstructorArgs *string `json:"constructor_args,omitempty"`
}

type _DeployInput DeployInput

// NewDeployInput instantiates a new DeployInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeployInput(abi string, bytecode string) *DeployInput {
	this := DeployInput{}
	this.Abi = abi
	this.Bytecode = bytecode
	return &this
}

// NewDeployInputWithDefaults instantiates a new DeployInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeployInputWithDefaults() *DeployInput {
	this := DeployInput{}
	return &this
}

// GetChainId returns the ChainId field value if set, zero value otherwise.
func (o *DeployInput) GetChainId() string {
	if o == nil || IsNil(o.ChainId) {
		var ret string
		return ret
	}
	return *o.ChainId
}

// GetChainIdOk returns a tuple with the ChainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployInput) GetChainIdOk() (*string, bool) {
	if o == nil || IsNil(o.ChainId) {
		return nil, false
	}
	return o.ChainId, true
}

// HasChainId returns a boolean if a field has been set.
func (o *DeployInput) HasChainId() bool {
	if o != nil && !IsNil(o.ChainId) {
		return true
	}

	return false
}

// SetChainId gets a reference to the given string and assigns it to the ChainId field.
func (o *DeployInput) SetChainId(v string) {
	o.ChainId = &v
}

// GetAbi returns the Abi field value
func (o *DeployInput) GetAbi() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Abi
}

// GetAbiOk returns a tuple with the Abi field value
// and a boolean to check if the value has been set.
func (o *DeployInput) GetAbiOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Abi, true
}

// SetAbi sets field value
func (o *DeployInput) SetAbi(v string) {
	o.Abi = v
}

// GetBytecode returns the Bytecode field value
func (o *DeployInput) GetBytecode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Bytecode
}

// GetBytecodeOk returns a tuple with the Bytecode field value
// and a boolean to check if the value has been set.
func (o *DeployInput) GetBytecodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Bytecode, true
}

// SetBytecode sets field value
func (o *DeployInput) SetBytecode(v string) {
	o.Bytecode = v
}

// GetConstructorArgs returns the ConstructorArgs field value if set, zero value otherwise.
func (o *DeployInput) GetConstructorArgs() string {
	if o == nil || IsNil(o.ConstructorArgs) {
		var ret string
		return ret
	}
	return *o.ConstructorArgs
}

// GetConstructorArgsOk returns a tuple with the ConstructorArgs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeployInput) GetConstructorArgsOk() (*string, bool) {
	if o == nil || IsNil(o.ConstructorArgs) {
		return nil, false
	}
	return o.ConstructorArgs, true
}

// HasConstructorArgs returns a boolean if a field has been set.
func (o *DeployInput) HasConstructorArgs() bool {
	if o != nil && !IsNil(o.ConstructorArgs) {
		return true
	}

	return false
}

// SetConstructorArgs gets a reference to the given string and assigns it to the ConstructorArgs field.
func (o *DeployInput) SetConstructorArgs(v string) {
	o.ConstructorArgs = &v
}

func (o DeployInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeployInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ChainId) {
		toSerialize["chain_id"] = o.ChainId
	}
	toSerialize["abi"] = o.Abi
	toSerialize["bytecode"] = o.Bytecode
	if !IsNil(o.ConstructorArgs) {
		toSerialize["constructor_args"] = o.ConstructorArgs
	}
	return toSerialize, nil
}

func (o *DeployInput) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"abi",
		"bytecode",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDeployInput := _DeployInput{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDeployInput)

	if err != nil {
		return err
	}

	*o = DeployInput(varDeployInput)

	return err
}

type NullableDeployInput struct {
	value *DeployInput
	isSet bool
}

func (v NullableDeployInput) Get() *DeployInput {
	return v.value
}

func (v *NullableDeployInput) Set(val *DeployInput) {
	v.value = val
	v.isSet = true
}

func (v NullableDeployInput) IsSet() bool {
	return v.isSet
}

func (v *NullableDeployInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeployInput(val *DeployInput) *NullableDeployInput {
	return &NullableDeployInput{value: val, isSet: true}
}

func (v NullableDeployInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeployInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



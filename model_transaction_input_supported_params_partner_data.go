/*
moon-vault-api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moonsdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TransactionInputSupportedParamsPartnerData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactionInputSupportedParamsPartnerData{}

// TransactionInputSupportedParamsPartnerData struct for TransactionInputSupportedParamsPartnerData
type TransactionInputSupportedParamsPartnerData struct {
	RedirectUrl TransactionInputSupportedParamsPartnerDataRedirectUrl `json:"redirectUrl"`
}

type _TransactionInputSupportedParamsPartnerData TransactionInputSupportedParamsPartnerData

// NewTransactionInputSupportedParamsPartnerData instantiates a new TransactionInputSupportedParamsPartnerData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionInputSupportedParamsPartnerData(redirectUrl TransactionInputSupportedParamsPartnerDataRedirectUrl) *TransactionInputSupportedParamsPartnerData {
	this := TransactionInputSupportedParamsPartnerData{}
	this.RedirectUrl = redirectUrl
	return &this
}

// NewTransactionInputSupportedParamsPartnerDataWithDefaults instantiates a new TransactionInputSupportedParamsPartnerData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionInputSupportedParamsPartnerDataWithDefaults() *TransactionInputSupportedParamsPartnerData {
	this := TransactionInputSupportedParamsPartnerData{}
	return &this
}

// GetRedirectUrl returns the RedirectUrl field value
func (o *TransactionInputSupportedParamsPartnerData) GetRedirectUrl() TransactionInputSupportedParamsPartnerDataRedirectUrl {
	if o == nil {
		var ret TransactionInputSupportedParamsPartnerDataRedirectUrl
		return ret
	}

	return o.RedirectUrl
}

// GetRedirectUrlOk returns a tuple with the RedirectUrl field value
// and a boolean to check if the value has been set.
func (o *TransactionInputSupportedParamsPartnerData) GetRedirectUrlOk() (*TransactionInputSupportedParamsPartnerDataRedirectUrl, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RedirectUrl, true
}

// SetRedirectUrl sets field value
func (o *TransactionInputSupportedParamsPartnerData) SetRedirectUrl(v TransactionInputSupportedParamsPartnerDataRedirectUrl) {
	o.RedirectUrl = v
}

func (o TransactionInputSupportedParamsPartnerData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactionInputSupportedParamsPartnerData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["redirectUrl"] = o.RedirectUrl
	return toSerialize, nil
}

func (o *TransactionInputSupportedParamsPartnerData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"redirectUrl",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTransactionInputSupportedParamsPartnerData := _TransactionInputSupportedParamsPartnerData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTransactionInputSupportedParamsPartnerData)

	if err != nil {
		return err
	}

	*o = TransactionInputSupportedParamsPartnerData(varTransactionInputSupportedParamsPartnerData)

	return err
}

type NullableTransactionInputSupportedParamsPartnerData struct {
	value *TransactionInputSupportedParamsPartnerData
	isSet bool
}

func (v NullableTransactionInputSupportedParamsPartnerData) Get() *TransactionInputSupportedParamsPartnerData {
	return v.value
}

func (v *NullableTransactionInputSupportedParamsPartnerData) Set(val *TransactionInputSupportedParamsPartnerData) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionInputSupportedParamsPartnerData) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionInputSupportedParamsPartnerData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionInputSupportedParamsPartnerData(val *TransactionInputSupportedParamsPartnerData) *NullableTransactionInputSupportedParamsPartnerData {
	return &NullableTransactionInputSupportedParamsPartnerData{value: val, isSet: true}
}

func (v NullableTransactionInputSupportedParamsPartnerData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionInputSupportedParamsPartnerData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



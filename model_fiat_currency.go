/*
moon-vault-api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moonsdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the FiatCurrency type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FiatCurrency{}

// FiatCurrency struct for FiatCurrency
type FiatCurrency struct {
	Icon string `json:"icon"`
	Symbol string `json:"symbol"`
	Name string `json:"name"`
	Code string `json:"code"`
	Id string `json:"id"`
}

type _FiatCurrency FiatCurrency

// NewFiatCurrency instantiates a new FiatCurrency object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiatCurrency(icon string, symbol string, name string, code string, id string) *FiatCurrency {
	this := FiatCurrency{}
	this.Icon = icon
	this.Symbol = symbol
	this.Name = name
	this.Code = code
	this.Id = id
	return &this
}

// NewFiatCurrencyWithDefaults instantiates a new FiatCurrency object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiatCurrencyWithDefaults() *FiatCurrency {
	this := FiatCurrency{}
	return &this
}

// GetIcon returns the Icon field value
func (o *FiatCurrency) GetIcon() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Icon
}

// GetIconOk returns a tuple with the Icon field value
// and a boolean to check if the value has been set.
func (o *FiatCurrency) GetIconOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Icon, true
}

// SetIcon sets field value
func (o *FiatCurrency) SetIcon(v string) {
	o.Icon = v
}

// GetSymbol returns the Symbol field value
func (o *FiatCurrency) GetSymbol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value
// and a boolean to check if the value has been set.
func (o *FiatCurrency) GetSymbolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Symbol, true
}

// SetSymbol sets field value
func (o *FiatCurrency) SetSymbol(v string) {
	o.Symbol = v
}

// GetName returns the Name field value
func (o *FiatCurrency) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *FiatCurrency) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *FiatCurrency) SetName(v string) {
	o.Name = v
}

// GetCode returns the Code field value
func (o *FiatCurrency) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *FiatCurrency) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *FiatCurrency) SetCode(v string) {
	o.Code = v
}

// GetId returns the Id field value
func (o *FiatCurrency) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *FiatCurrency) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *FiatCurrency) SetId(v string) {
	o.Id = v
}

func (o FiatCurrency) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FiatCurrency) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["icon"] = o.Icon
	toSerialize["symbol"] = o.Symbol
	toSerialize["name"] = o.Name
	toSerialize["code"] = o.Code
	toSerialize["id"] = o.Id
	return toSerialize, nil
}

func (o *FiatCurrency) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"icon",
		"symbol",
		"name",
		"code",
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFiatCurrency := _FiatCurrency{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFiatCurrency)

	if err != nil {
		return err
	}

	*o = FiatCurrency(varFiatCurrency)

	return err
}

type NullableFiatCurrency struct {
	value *FiatCurrency
	isSet bool
}

func (v NullableFiatCurrency) Get() *FiatCurrency {
	return v.value
}

func (v *NullableFiatCurrency) Set(val *FiatCurrency) {
	v.value = val
	v.isSet = true
}

func (v NullableFiatCurrency) IsSet() bool {
	return v.isSet
}

func (v *NullableFiatCurrency) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiatCurrency(val *FiatCurrency) *NullableFiatCurrency {
	return &NullableFiatCurrency{value: val, isSet: true}
}

func (v NullableFiatCurrency) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiatCurrency) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



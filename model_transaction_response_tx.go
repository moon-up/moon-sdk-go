/*
moon-vault-api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package moonsdk

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TransactionResponseTx type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransactionResponseTx{}

// TransactionResponseTx struct for TransactionResponseTx
type TransactionResponseTx struct {
	Data string `json:"data"`
	Value string `json:"value"`
	Nonce float64 `json:"nonce"`
	Gas string `json:"gas"`
	To string `json:"to"`
	From string `json:"from"`
}

type _TransactionResponseTx TransactionResponseTx

// NewTransactionResponseTx instantiates a new TransactionResponseTx object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionResponseTx(data string, value string, nonce float64, gas string, to string, from string) *TransactionResponseTx {
	this := TransactionResponseTx{}
	this.Data = data
	this.Value = value
	this.Nonce = nonce
	this.Gas = gas
	this.To = to
	this.From = from
	return &this
}

// NewTransactionResponseTxWithDefaults instantiates a new TransactionResponseTx object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionResponseTxWithDefaults() *TransactionResponseTx {
	this := TransactionResponseTx{}
	return &this
}

// GetData returns the Data field value
func (o *TransactionResponseTx) GetData() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *TransactionResponseTx) GetDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *TransactionResponseTx) SetData(v string) {
	o.Data = v
}

// GetValue returns the Value field value
func (o *TransactionResponseTx) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *TransactionResponseTx) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *TransactionResponseTx) SetValue(v string) {
	o.Value = v
}

// GetNonce returns the Nonce field value
func (o *TransactionResponseTx) GetNonce() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Nonce
}

// GetNonceOk returns a tuple with the Nonce field value
// and a boolean to check if the value has been set.
func (o *TransactionResponseTx) GetNonceOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Nonce, true
}

// SetNonce sets field value
func (o *TransactionResponseTx) SetNonce(v float64) {
	o.Nonce = v
}

// GetGas returns the Gas field value
func (o *TransactionResponseTx) GetGas() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Gas
}

// GetGasOk returns a tuple with the Gas field value
// and a boolean to check if the value has been set.
func (o *TransactionResponseTx) GetGasOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Gas, true
}

// SetGas sets field value
func (o *TransactionResponseTx) SetGas(v string) {
	o.Gas = v
}

// GetTo returns the To field value
func (o *TransactionResponseTx) GetTo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.To
}

// GetToOk returns a tuple with the To field value
// and a boolean to check if the value has been set.
func (o *TransactionResponseTx) GetToOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.To, true
}

// SetTo sets field value
func (o *TransactionResponseTx) SetTo(v string) {
	o.To = v
}

// GetFrom returns the From field value
func (o *TransactionResponseTx) GetFrom() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.From
}

// GetFromOk returns a tuple with the From field value
// and a boolean to check if the value has been set.
func (o *TransactionResponseTx) GetFromOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.From, true
}

// SetFrom sets field value
func (o *TransactionResponseTx) SetFrom(v string) {
	o.From = v
}

func (o TransactionResponseTx) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransactionResponseTx) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	toSerialize["value"] = o.Value
	toSerialize["nonce"] = o.Nonce
	toSerialize["gas"] = o.Gas
	toSerialize["to"] = o.To
	toSerialize["from"] = o.From
	return toSerialize, nil
}

func (o *TransactionResponseTx) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"data",
		"value",
		"nonce",
		"gas",
		"to",
		"from",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTransactionResponseTx := _TransactionResponseTx{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTransactionResponseTx)

	if err != nil {
		return err
	}

	*o = TransactionResponseTx(varTransactionResponseTx)

	return err
}

type NullableTransactionResponseTx struct {
	value *TransactionResponseTx
	isSet bool
}

func (v NullableTransactionResponseTx) Get() *TransactionResponseTx {
	return v.value
}

func (v *NullableTransactionResponseTx) Set(val *TransactionResponseTx) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionResponseTx) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionResponseTx) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionResponseTx(val *TransactionResponseTx) *NullableTransactionResponseTx {
	return &NullableTransactionResponseTx{value: val, isSet: true}
}

func (v NullableTransactionResponseTx) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionResponseTx) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


